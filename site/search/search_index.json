{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"conrich \u2003 conrich \u70ba\u5eb7\u548c\u7d9c\u5408\u8b49\u5238\u7a0b\u5f0f\u4e0b\u55aeAPI\uff0c\u6574\u5408\u4e86.net framework 4.5\u67b6\u69cb\u4e0b\u7684\u4ea4\u6613\u4ecb\u9762\uff0c\u8b93\u4f7f\u7528\u8005\u53ef\u4ee5\u8f15\u9b06\u7684\u904b\u7528python 3.6+ \u57f7\u884c\u5feb\u901f\u4e0b\u55ae\u3002 conrich is a securities, futures, option API, which send orders to Concord Securities Group. This package integrated with .net framework 4.5, and is compatible with Python 3.6+. It is distributed under the MIT license. Contents Overwiew Table of content Reference Installation Preinstall Binaries User Guide Login Stock Futures Foreign Futures Place Order Stock Futures Foreign Futures Register Event Register Quote Reference Click these two links can get the zip file of Stock API and Futures API. The zip file includes the C# example and the relative document of API. - Stock API zip file - Futures API zip file \u2192 Back to main page \u2b89 Back to top","title":"Overview"},{"location":"#conrich","text":"conrich \u70ba\u5eb7\u548c\u7d9c\u5408\u8b49\u5238\u7a0b\u5f0f\u4e0b\u55aeAPI\uff0c\u6574\u5408\u4e86.net framework 4.5\u67b6\u69cb\u4e0b\u7684\u4ea4\u6613\u4ecb\u9762\uff0c\u8b93\u4f7f\u7528\u8005\u53ef\u4ee5\u8f15\u9b06\u7684\u904b\u7528python 3.6+ \u57f7\u884c\u5feb\u901f\u4e0b\u55ae\u3002 conrich is a securities, futures, option API, which send orders to Concord Securities Group. This package integrated with .net framework 4.5, and is compatible with Python 3.6+. It is distributed under the MIT license.","title":"conrich&emsp;"},{"location":"#contents","text":"Overwiew Table of content Reference Installation Preinstall Binaries User Guide Login Stock Futures Foreign Futures Place Order Stock Futures Foreign Futures Register Event Register Quote","title":"Contents"},{"location":"#reference","text":"Click these two links can get the zip file of Stock API and Futures API. The zip file includes the C# example and the relative document of API. - Stock API zip file - Futures API zip file \u2192 Back to main page \u2b89 Back to top","title":"Reference"},{"location":"faq/","text":"FAQ","title":"FAQ"},{"location":"faq/#faq","text":"","title":"FAQ"},{"location":"fu_event_chart/","text":"","title":"Fu event chart"},{"location":"install/","text":"Installation Before using conrich , there is something that need to be installed. Requirement Must already install application named \u91d1\u597d\u5eb7. If not install can download from this link first. \u91d1\u597d\u5eb7 Preinstall API usage needs application in advance. In order to use this package, please contact us. Download the zip file of Stock or Futures from Reference base on your demand. Execute the file Concord.API.Stock.Setup.msi which be found in the zip file which you download in the previous step. Note The path of Concord.API.Stock.Setup.msi :zip_file/\u5b89\u88dd\u7a0b\u5f0f/Concord.API.Stock.Setup.msi. Installation After execute Concord.API.Stock.Setup.msi , just simply use pip to install package. pip install conrich Warning python version must to be 3.6+ . Available install for python 3.6+ 32bit and 64bit edition. \u2192 Back to main page \u2b89 Back to top","title":"Installation"},{"location":"install/#installation","text":"Before using conrich , there is something that need to be installed. Requirement Must already install application named \u91d1\u597d\u5eb7. If not install can download from this link first. \u91d1\u597d\u5eb7","title":"Installation"},{"location":"install/#preinstall","text":"API usage needs application in advance. In order to use this package, please contact us. Download the zip file of Stock or Futures from Reference base on your demand. Execute the file Concord.API.Stock.Setup.msi which be found in the zip file which you download in the previous step. Note The path of Concord.API.Stock.Setup.msi :zip_file/\u5b89\u88dd\u7a0b\u5f0f/Concord.API.Stock.Setup.msi.","title":"Preinstall"},{"location":"install/#installation_1","text":"After execute Concord.API.Stock.Setup.msi , just simply use pip to install package. pip install conrich Warning python version must to be 3.6+ . Available install for python 3.6+ 32bit and 64bit edition. \u2192 Back to main page \u2b89 Back to top","title":"Installation"},{"location":"tutorial/login/","text":"Login API Before using functions in conrich, we need to initiate the trade API object and login to it with your ID and passwords. Requirement Check is your account is activated for API trading. If not, please contact us. Check is the certificate expired. If certificate is expired, reapply from here Certuficate Enrollment System . Stock from conrich import StockAPI agent = StockAPI() agent.login(\"YOUR_PERSON_ID\", \"YOUR_PASSWORD\") Futures from conrich import FuturesAPI agent = FuturesAPI() agent.login(\"YOUR_PERSON_ID\", \"YOUR_PASSWORD\") Foreign Futures from conrich import ForeignFuturesAPI agent = ForeignFuturesAPI() agent.login(\"YOUR_PERSON_ID\", \"YOUR_PASSWORD\") \u2192 Back to main page \u2b89 Back to top","title":"Login API"},{"location":"tutorial/login/#login-api","text":"Before using functions in conrich, we need to initiate the trade API object and login to it with your ID and passwords. Requirement Check is your account is activated for API trading. If not, please contact us. Check is the certificate expired. If certificate is expired, reapply from here Certuficate Enrollment System .","title":"Login API"},{"location":"tutorial/login/#stock","text":"from conrich import StockAPI agent = StockAPI() agent.login(\"YOUR_PERSON_ID\", \"YOUR_PASSWORD\")","title":"Stock"},{"location":"tutorial/login/#futures","text":"from conrich import FuturesAPI agent = FuturesAPI() agent.login(\"YOUR_PERSON_ID\", \"YOUR_PASSWORD\")","title":"Futures"},{"location":"tutorial/login/#foreign-futures","text":"from conrich import ForeignFuturesAPI agent = ForeignFuturesAPI() agent.login(\"YOUR_PERSON_ID\", \"YOUR_PASSWORD\") \u2192 Back to main page \u2b89 Back to top","title":"Foreign Futures"},{"location":"tutorial/place_order/","text":"Place Order After login to the API successfully, can start to use the order function to place the order. Stock from conrich.Stock import constant result = agent.order(action = constant.Action.NEW_ORDER.value, branch_no = '8450', account_no = \"YOUR_ACCOUNT\", lot_type = constant.LotType.ROUND_LOT.value, order_type = constant.OrderType.ORDINARY.value, side = constant.Side.BUY.value, day_trade_flag = constant.DayTradeFlag.N.value, symbol = '6016', quantity = 1, price = 10.0, price_flag = constant.PriceFlag.FIX.value, time_in_force = constant.TimeInForce.ROD.value) Futures from conrich.Futures import constant result = agent.order(action = constant.Action.NEW_ORDER.value, branch_no = 'F029000', account_no = \"YOUR_ACCOUNT\", market_type = constant.Market.FUTURES.value, compound_type = constant.CompoundType.FUTURES_SINGLE.value, commodity = 'TXFI0', time_in_force = constant.TimeInForce.ROD.value, writeoff = constant.WriteOff.AUTO.value, order_type = constant.OrderType.LIMIT.value, side = constant.Side.BUY.value, quantity = 1, price = 12000.00) Foreign Futures agent.order(action=constant.Action.NEW_ORDER.value, branch_no = 'F029000', account_no = \"YOUR_ACCOUNT\", exchange = 'NYM', side1 = constant.Side.BUY.value, market_type1 = constant.Market.FUTURES.value, commodity1 = 'QM', commodity_month1 = '202010', strike_price1 = 0, put_call1 = constant.PutCall.NONE.value, side2 = '', market_type2 = '', commodity2 = '', commodity_month2 = '', strike_price2 = 0, put_call2 = constant.PutCall.NONE.value, order_type = constant.ForeignOrderType.LIMIT.value, price = 0, price_numerator = 0, price_denominator = 0, stop_price = 42.95, stop_price_numerator = 0, stop_price_denominator = 0, quantity = 1, writeoff = constant.Writeoff.OPEN.value) \u2192 Back to main page \u2b89 Back to top","title":"Place Order"},{"location":"tutorial/place_order/#place-order","text":"After login to the API successfully, can start to use the order function to place the order.","title":"Place Order"},{"location":"tutorial/place_order/#stock","text":"from conrich.Stock import constant result = agent.order(action = constant.Action.NEW_ORDER.value, branch_no = '8450', account_no = \"YOUR_ACCOUNT\", lot_type = constant.LotType.ROUND_LOT.value, order_type = constant.OrderType.ORDINARY.value, side = constant.Side.BUY.value, day_trade_flag = constant.DayTradeFlag.N.value, symbol = '6016', quantity = 1, price = 10.0, price_flag = constant.PriceFlag.FIX.value, time_in_force = constant.TimeInForce.ROD.value)","title":"Stock"},{"location":"tutorial/place_order/#futures","text":"from conrich.Futures import constant result = agent.order(action = constant.Action.NEW_ORDER.value, branch_no = 'F029000', account_no = \"YOUR_ACCOUNT\", market_type = constant.Market.FUTURES.value, compound_type = constant.CompoundType.FUTURES_SINGLE.value, commodity = 'TXFI0', time_in_force = constant.TimeInForce.ROD.value, writeoff = constant.WriteOff.AUTO.value, order_type = constant.OrderType.LIMIT.value, side = constant.Side.BUY.value, quantity = 1, price = 12000.00)","title":"Futures"},{"location":"tutorial/place_order/#foreign-futures","text":"agent.order(action=constant.Action.NEW_ORDER.value, branch_no = 'F029000', account_no = \"YOUR_ACCOUNT\", exchange = 'NYM', side1 = constant.Side.BUY.value, market_type1 = constant.Market.FUTURES.value, commodity1 = 'QM', commodity_month1 = '202010', strike_price1 = 0, put_call1 = constant.PutCall.NONE.value, side2 = '', market_type2 = '', commodity2 = '', commodity_month2 = '', strike_price2 = 0, put_call2 = constant.PutCall.NONE.value, order_type = constant.ForeignOrderType.LIMIT.value, price = 0, price_numerator = 0, price_denominator = 0, stop_price = 42.95, stop_price_numerator = 0, stop_price_denominator = 0, quantity = 1, writeoff = constant.Writeoff.OPEN.value) \u2192 Back to main page \u2b89 Back to top","title":"Foreign Futures"},{"location":"tutorial/register_quote/","text":"Register realtime Quote when you wan to initiate a quote server, you should open and connect to \u91d1\u597d\u5eb7 first. from conrich import QuoteServer def test_get_quote(commodity, topic, value): print('[{}][{}] {}'.format(commodity, topic, value)) agent = QuoteServer() agent.OnQuoteUpdate += test_get_quote agent.register_topic('2330.TW','Bid') agent.register_topic('2330.TW','Ask') topic1 = agent.code_convert(commodity='TXO', commodity_type='P', strike_price=12500, expire_date=datetime(2020, 10, 18), after_hour=True) agent.register_topic(topic1, 'Bid') topic2 = agent.code_convert(commodity='TX', commodity_type='F', strike_price=0, expire_date=datetime(2020, 10, 18), after_hour=False) agent.register_topic(topic2, 'Ask') \u2192 Back to main page \u2b89 Back to top","title":"Register Quote"},{"location":"tutorial/register_quote/#register-realtime-quote","text":"when you wan to initiate a quote server, you should open and connect to \u91d1\u597d\u5eb7 first. from conrich import QuoteServer def test_get_quote(commodity, topic, value): print('[{}][{}] {}'.format(commodity, topic, value)) agent = QuoteServer() agent.OnQuoteUpdate += test_get_quote agent.register_topic('2330.TW','Bid') agent.register_topic('2330.TW','Ask') topic1 = agent.code_convert(commodity='TXO', commodity_type='P', strike_price=12500, expire_date=datetime(2020, 10, 18), after_hour=True) agent.register_topic(topic1, 'Bid') topic2 = agent.code_convert(commodity='TX', commodity_type='F', strike_price=0, expire_date=datetime(2020, 10, 18), after_hour=False) agent.register_topic(topic2, 'Ask') \u2192 Back to main page \u2b89 Back to top","title":"Register realtime Quote"},{"location":"tutorial/register_report/","text":"Register Order Report If you want to catch order or match report, one can define a function and register Stock def OrderReportHandler(result, msg): order_result = {'result' : result.ResultType, 'status' : result.StatusCode, 'desc' : result.CodeDesc, 'order_guid' : result.OrderGuid, 'net_no' : result.ClOrdID } if result.ResultType=='1': report = result.ExcReport exe_report = {'order_id' : report.OrderID, 'orig_net_no' : report.OrigClOrdID, 'execute_status' : report.ExecType, 'account_no' : report.Account, 'symbol' : report.Symbol, 'side' : report.Side, 'quantity' : report.OrderQty, 'price' : report.Price, 'strike_quantity' : report.LastQty, 'strike_price' : report.LastPx, 'transaction_time' : report.TransactTime} agent.OrderReportEvent += OrderReportHandler Futures def OrderReportHandler(code, msg): dict_msg = dict((agent.msg_tag[k], v) for k,v in [tag.split('=') for tag in msg.split('|')]) print(dict_msg) agent.OnFOrderReport += OrderReportHandler \u2192 Back to main page \u2b89 Back to top","title":"Register Report"},{"location":"tutorial/register_report/#register-order-report","text":"If you want to catch order or match report, one can define a function and register","title":"Register Order Report"},{"location":"tutorial/register_report/#stock","text":"def OrderReportHandler(result, msg): order_result = {'result' : result.ResultType, 'status' : result.StatusCode, 'desc' : result.CodeDesc, 'order_guid' : result.OrderGuid, 'net_no' : result.ClOrdID } if result.ResultType=='1': report = result.ExcReport exe_report = {'order_id' : report.OrderID, 'orig_net_no' : report.OrigClOrdID, 'execute_status' : report.ExecType, 'account_no' : report.Account, 'symbol' : report.Symbol, 'side' : report.Side, 'quantity' : report.OrderQty, 'price' : report.Price, 'strike_quantity' : report.LastQty, 'strike_price' : report.LastPx, 'transaction_time' : report.TransactTime} agent.OrderReportEvent += OrderReportHandler","title":"Stock"},{"location":"tutorial/register_report/#futures","text":"def OrderReportHandler(code, msg): dict_msg = dict((agent.msg_tag[k], v) for k,v in [tag.split('=') for tag in msg.split('|')]) print(dict_msg) agent.OnFOrderReport += OrderReportHandler \u2192 Back to main page \u2b89 Back to top","title":"Futures"},{"location":"tutorial/user_guide/","text":"User Guide Here is the document structure in the user guide. To guide the user correctly use the package. Contents of User Guide User Guide Login Stock Futures Foreign Futures Place Order Stock Futures Foreign Futures Register Event Register Quote \u2192 Back to main page \u2b89 Back to top","title":"Table of content"},{"location":"tutorial/user_guide/#user-guide","text":"Here is the document structure in the user guide. To guide the user correctly use the package.","title":"User Guide"},{"location":"tutorial/user_guide/#contents-of-user-guide","text":"User Guide Login Stock Futures Foreign Futures Place Order Stock Futures Foreign Futures Register Event Register Quote \u2192 Back to main page \u2b89 Back to top","title":"Contents of User Guide"}]}